# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Input.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from Home_Frame import Ui_MainWindow
from sensoryFramePro import Ui_sensoryFramePro


class Ui_InputFrame(object):
    def __init__(self):
        super().__init__()
        self.miniHipHeight=50
        self.maxDiffHipHeight=100
        self.hipHeight=50
        self.doctor_id=""
        self.name=""
        self.weight=""
        self.gender="male"
    def setupUi(self, InputFrame):
        self.miniHipHeight=50
        self.maxDiffHipHeight=100
        self.hipHeight
        self.doctor_id=""
        self.name=""
        self.weight=""
        self.gender
        InputFrame.setObjectName("InputFrame")
        InputFrame.resize(800, 470)
        InputFrame.setStyleSheet("background-color: #141332;")
        self.nextButton = QtWidgets.QPushButton(InputFrame)
        self.nextButton.setGeometry(QtCore.QRect(630, 400, 151, 31))
        self.nextButton.setStyleSheet("QPushButton {\n"
"    background-color: #6359E9; /* Change this to your desired background color */\n"
"    color: white; /* Change this to your desired text color */\n"
"    border: 2px; /* Change this to your desired border color and thickness */\n"
"    border-radius: 15px; /* Adjust the radius to your desired value for rounded corners */\n"
"    padding: 5px 10px; /* Adjust the padding to your desired value */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #0ACDE4; /* Change this to your desired background color on hover */\n"
"    border: 2px solid #0ACDE4; /* Change this to your desired border color on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #0AADE2; /* Change this to your desired background color when pressed */\n"
"    border: 2px solid #0AADE2; /* Change this to your desired border color when pressed */\n"
"}")
        self.nextButton.setObjectName("nextButton")
        self.backButton = QtWidgets.QPushButton(InputFrame)
        self.backButton.setGeometry(QtCore.QRect(30, 400, 151, 31))
        self.backButton.setStyleSheet("QPushButton {\n"
"    background-color: #6359E9; /* Change this to your desired background color */\n"
"    color: white; /* Change this to your desired text color */\n"
"    border: 2px; /* Change this to your desired border color and thickness */\n"
"    border-radius: 15px; /* Adjust the radius to your desired value for rounded corners */\n"
"    padding: 5px 10px; /* Adjust the padding to your desired value */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #0ACDE4; /* Change this to your desired background color on hover */\n"
"    border: 2px solid #0ACDE4; /* Change this to your desired border color on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #0AADE2; /* Change this to your desired background color when pressed */\n"
"    border: 2px solid #0AADE2; /* Change this to your desired border color when pressed */\n"
"}")
        self.backButton.setObjectName("backButton")
        self.hipHeightSlider = QtWidgets.QSlider(InputFrame)
        self.hipHeightSlider.setGeometry(QtCore.QRect(60, 310, 681, 51))
        self.hipHeightSlider.setOrientation(QtCore.Qt.Horizontal)
        self.hipHeightSlider.setObjectName("horizontalSlider")
        self.nameInput = QtWidgets.QLineEdit(InputFrame)
        self.nameInput.setGeometry(QtCore.QRect(140, 40, 601, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.nameInput.setFont(font)
        self.nameInput.setStyleSheet("QLineEdit{\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"    background-color:#8C89B4;\n"
"\n"
"\n"
"}")
        self.nameInput.setObjectName("nameInput")
        self.label = QtWidgets.QLabel(InputFrame)
        self.label.setGeometry(QtCore.QRect(60, 40, 81, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setStyleSheet("QLabel {\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"}")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(InputFrame)
        self.label_2.setGeometry(QtCore.QRect(20, 100, 101, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("QLabel {\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"}")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(InputFrame)
        self.label_3.setGeometry(QtCore.QRect(40, 160, 101, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("QLabel {\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"}")
        self.label_3.setObjectName("label_3")
        self.label_5 = QtWidgets.QLabel(InputFrame)
        self.label_5.setGeometry(QtCore.QRect(210, 210, 101, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("QLabel {\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"}")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(InputFrame)
        self.label_6.setGeometry(QtCore.QRect(210, 270, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("QLabel {\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"}")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(InputFrame)
        self.label_7.setGeometry(QtCore.QRect(200, 160, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("QLabel {\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"}")
        self.label_7.setObjectName("label_7")
        self.maleRadioButton = QtWidgets.QRadioButton(InputFrame)
        self.maleRadioButton.setGeometry(QtCore.QRect(340, 210, 111, 17))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.maleRadioButton.setFont(font)
        self.maleRadioButton.setChecked(True)
        self.maleRadioButton.setStyleSheet("QRadioButton {\n"
"    color: white;  /* Change \'red\' to any color you want */\n"
"}")
        self.maleRadioButton.setObjectName("maleRadioButton")
        self.femaleRadioButton = QtWidgets.QRadioButton(InputFrame)
        self.femaleRadioButton.setGeometry(QtCore.QRect(490, 206, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.femaleRadioButton.setFont(font)
        self.femaleRadioButton.setStyleSheet("QRadioButton {\n"
"    color: white;  /* Change \'red\' to any color you want */\n"
"}")
        self.femaleRadioButton.setObjectName("femaleRadioButton")
        self.hipHeightText = QtWidgets.QLabel(InputFrame)
        self.hipHeightText.setGeometry(QtCore.QRect(340, 270, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.hipHeightText.setFont(font)
        self.hipHeightText.setStyleSheet("QLabel {\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"}")
                # Create a button group for radio buttons
        self.genderGroup = QtWidgets.QButtonGroup(InputFrame)  # Ensure to pass 'self' as parent
        self.genderGroup.addButton(self.maleRadioButton)
        self.genderGroup.addButton(self.femaleRadioButton)
        self.hipHeightText.setObjectName("hipHeight")
        self.label_9 = QtWidgets.QLabel(InputFrame)
        self.label_9.setGeometry(QtCore.QRect(380, 270, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("QLabel {\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"}")
        self.label_9.setObjectName("label_9")
        self.doctroIdInput = QtWidgets.QLineEdit(InputFrame)
        self.doctroIdInput.setGeometry(QtCore.QRect(140, 100, 601, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.doctroIdInput.setFont(font)
        self.doctroIdInput.setStyleSheet("QLineEdit{\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"    background-color:#8C89B4;\n"
"\n"
"\n"
"}")
        self.doctroIdInput.setObjectName("doctroIdInput")
        self.weightInput = QtWidgets.QLineEdit(InputFrame)
        self.weightInput.setGeometry(QtCore.QRect(130, 160, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.weightInput.setFont(font)
        self.weightInput.setStyleSheet("QLineEdit{\n"
"    color: white;  /* Change \'red\' to any color you prefer */\n"
"    background-color:#8C89B4;\n"
"\n"
"\n"
"}")
        self.weightInput.setObjectName("weightInput")

        self.retranslateUi(InputFrame)
        QtCore.QMetaObject.connectSlotsByName(InputFrame)
                ### connect function to widgets 
        self.backButton.clicked.connect(self.go_to_home)
        self.nextButton.clicked.connect(self.nextFunc)
        self.hipHeightSlider.valueChanged.connect(self.updateHipHeight)


    def go_to_home(self):
        # Close the current window (Exercise_Frame) and show the main window (Home_Frame)
        main_window = self.backButton.window()  # Access the parent window
        while main_window is not None and not isinstance(main_window, QtWidgets.QMainWindow):
            main_window = main_window.parent()
        if main_window is not None:
            home_frame = Ui_MainWindow()  # Instantiate the home frame
            # Set up the home frame in the main window
            home_frame.setupUi(main_window)
            main_window.show()  # Show the main window
            main_window.close()
          # Close the current window
    def updateHipHeight(self,value):
        self.hipHeight=self.miniHipHeight+value/100*self.maxDiffHipHeight
        self.hipHeight=int(self.hipHeight)
        self.hipHeightText.setText(f"{self.hipHeight}")
    def nextFunc(self):
        self.name=self.nameInput.text
        self.doctor_id=self.doctroIdInput.text
        self.weight=self.weightInput.text
        if self.maleRadioButton.isChecked():
            self.gender="male"
        else :
            self.gender="female"
        self.open_sensory_page()


    def open_sensory_page(self):
        self.loading_screen = LoadingScreen()
        self.loading_screen.show()
        QtCore.QTimer.singleShot(6000, self.show_sensory_page)

    def show_sensory_page(self):
        self.sensory_page = QtWidgets.QMainWindow()
        self.ui = Ui_sensoryFramePro(hipHeight= self.hipHeight,Name=self.name)
        self.ui.setupUi(self.sensory_page)
        self.sensory_page.showFullScreen()
        self.loading_screen.close()


    def retranslateUi(self, InputFrame):
        _translate = QtCore.QCoreApplication.translate
        InputFrame.setWindowTitle(_translate("InputFrame", "Frame"))
        self.nextButton.setText(_translate("InputFrame", "Next"))
        self.backButton.setText(_translate("InputFrame", "back "))
        self.nameInput.setText(_translate("InputFrame", "mohamed Ayman"))
        self.label.setText(_translate("InputFrame", "Name:"))
        self.label_2.setText(_translate("InputFrame", "Doctor id :"))
        self.label_3.setText(_translate("InputFrame", "Weigth :"))
        self.label_5.setText(_translate("InputFrame", "Gender:"))
        self.label_6.setText(_translate("InputFrame", "Hip height:"))
        self.label_7.setText(_translate("InputFrame", "KG"))
        self.maleRadioButton.setText(_translate("InputFrame", "male"))
        self.femaleRadioButton.setText(_translate("InputFrame", "female"))
        self.hipHeightText.setText(_translate("InputFrame", "0"))
        self.label_9.setText(_translate("InputFrame", "cm"))
        self.doctroIdInput.setText(_translate("InputFrame", "123456789"))
        self.weightInput.setText(_translate("InputFrame", "90"))
class LoadingScreen(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.setWindowTitle('Loading')
        self.setWindowFlag(QtCore.Qt.FramelessWindowHint)  # No window frame
        self.setWindowState(QtCore.Qt.WindowFullScreen)  # Fullscreen

        # Create a black background
        self.setStyleSheet("background-color: black;")

        # Create a label for the loading text
        self.label = QtWidgets.QLabel('Loading...', self)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setStyleSheet("color: white; font-size: 30px;")

        # Create a layout and add the label
        layout = QtWidgets.QVBoxLayout()
        layout.addWidget(self.label)
        self.setLayout(layout)